{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2b82c5cd_ba02060f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-29T17:10:30Z",
      "side": 1,
      "message": "This CL should now be ready for a review please.",
      "revId": "8c941c5801e485ae3e059f99fde72e35069f81ee",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f27788f_8b51a249",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-30T20:53:07Z",
      "side": 1,
      "message": "Heads-up: I am not 100% sure anymore if this CL is necessary.\n\nAdding `GA_88` support to `skcms` was necessary to support changing the pixel format via `skcms_Transform` - this was the approach taken in https://chromium-review.googlesource.com/c/chromium/src/+/4720150/38/third_party/rust/png/bindings/bindings.cc).  OTOH, we have now pivoted to hiding the `png` crate behind `SkCodec` API and in this world it may be preferable to do color/pixel format transformations via `SkSwizzler` (similarly to what `SkPngCodec` does, maybe reusing some code if possible).\n\nDo you think that adding `GA_88` is still desirable even if it is not needed to support Rust `png` crate?",
      "revId": "8c941c5801e485ae3e059f99fde72e35069f81ee",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80392faa_00616776",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 11059
      },
      "writtenOn": "2024-07-30T20:56:52Z",
      "side": 1,
      "message": "I don\u0027t see a problem with landing this if it works and we now know a real-world use case for it.",
      "parentUuid": "3f27788f_8b51a249",
      "revId": "8c941c5801e485ae3e059f99fde72e35069f81ee",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dddb8e56_fb6ce9eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-31T23:50:10Z",
      "side": 1,
      "message": "Ack.  And I think we may still need to use the new enum value here: https://skia-review.googlesource.com/c/skia/+/884236/7/experimental/rust_png/SkPngRustCodec.cpp#63",
      "parentUuid": "80392faa_00616776",
      "revId": "8c941c5801e485ae3e059f99fde72e35069f81ee",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "8c941c5801e485ae3e059f99fde72e35069f81ee",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8c941c5801e485ae3e059f99fde72e35069f81ee",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8c941c5801e485ae3e059f99fde72e35069f81ee",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}