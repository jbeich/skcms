{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ba25748d_37902bbe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6225
      },
      "writtenOn": "2025-06-04T09:45:06Z",
      "side": 1,
      "message": "Thanks, sorry for the churn on the broken CL.",
      "revId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270988d0_83b56738",
        "filename": "skcms.cc",
        "patchSetId": 4
      },
      "lineNbr": 258,
      "author": {
        "id": 6225
      },
      "writtenOn": "2025-06-04T09:45:06Z",
      "side": 1,
      "message": "I changed my mind on this, and made these independent. Over in the Skia version, I will still be leaning on the \"ish\" versions until they\u0027re ready to be removed.",
      "revId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca60056d_f5a75fbc",
        "filename": "skcms.cc",
        "patchSetId": 4
      },
      "lineNbr": 1989,
      "author": {
        "id": 6225
      },
      "writtenOn": "2025-06-04T09:45:06Z",
      "side": 1,
      "message": "In the future, it might be useful to add a function `skcms_TransferFunction_eval_inverse`, rather than requiring the \"invert then evaluate\" behavior (which requires that we add a PQ-inverse, if we want to support that).\n\nBut not for now.",
      "revId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    }
  ]
}