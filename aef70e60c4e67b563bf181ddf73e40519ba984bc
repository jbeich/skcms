{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ba25748d_37902bbe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6225
      },
      "writtenOn": "2025-06-04T09:45:06Z",
      "side": 1,
      "message": "Thanks, sorry for the churn on the broken CL.",
      "revId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270988d0_83b56738",
        "filename": "skcms.cc",
        "patchSetId": 4
      },
      "lineNbr": 258,
      "author": {
        "id": 6225
      },
      "writtenOn": "2025-06-04T09:45:06Z",
      "side": 1,
      "message": "I changed my mind on this, and made these independent. Over in the Skia version, I will still be leaning on the \"ish\" versions until they\u0027re ready to be removed.",
      "revId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e40ad046_5b9a06c3",
        "filename": "skcms.cc",
        "patchSetId": 4
      },
      "lineNbr": 258,
      "author": {
        "id": 5395
      },
      "writtenOn": "2025-06-04T11:26:42Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "270988d0_83b56738",
      "revId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca60056d_f5a75fbc",
        "filename": "skcms.cc",
        "patchSetId": 4
      },
      "lineNbr": 1989,
      "author": {
        "id": 6225
      },
      "writtenOn": "2025-06-04T09:45:06Z",
      "side": 1,
      "message": "In the future, it might be useful to add a function `skcms_TransferFunction_eval_inverse`, rather than requiring the \"invert then evaluate\" behavior (which requires that we add a PQ-inverse, if we want to support that).\n\nBut not for now.",
      "revId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cd35d51_038ad192",
        "filename": "skcms.cc",
        "patchSetId": 4
      },
      "lineNbr": 1989,
      "author": {
        "id": 5395
      },
      "writtenOn": "2025-06-04T11:26:42Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ca60056d_f5a75fbc",
      "revId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Code-Review=MAX,user=non_uploader":"","label:Code-Review=MIN":""}}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Bot-Commit=+1":"","label:Code-Review=MIN":""}}}
      },
      "patchSetCommitId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "patchSetCommitId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[],"atomExplanations":{"value":{"is:review-enforced_gerrit":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[],"atomExplanations":{"value":{"is:review-enforcement-satisfied_gerrit":"Required approval count satisfied"}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"],"atomExplanations":{"value":{"is:false":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aef70e60c4e67b563bf181ddf73e40519ba984bc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}