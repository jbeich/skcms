{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "351fcf2b_d8a51c7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 11059
      },
      "writtenOn": "2024-07-26T22:27:59Z",
      "side": 1,
      "message": "LGTM overall but looks like tests aren\u0027t passing on Windows.",
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d96a2b12_b982b383",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-26T23:11:09Z",
      "side": 1,
      "message": "\u003e LGTM overall but looks like tests aren\u0027t passing on Windows.\n\nAck.\n\nI have trouble reproing on my Windows cloud-top:\n\n* I downloaded `ninja.exe`\n* I edited `ninja\\msvs` to set `cl \u003d c:\\src\\chromium\\src\\third_party\\llvm-build\\Release+Asserts\\bin\\clang-cl.exe`\n* This gives me: \"action RunAnalysis not compiled in\" error\n\nI thought that maybe I can use the bot environment for debugging, but the \"Debug\" button in the top-level corner of https://chromium-swarm.appspot.com/task?id\u003d6b09ec2ea49f4e10# gives me \"User unauthorized - try logging in with a different account\".\n\nLooking at the test output on the bot, there isn\u0027t much that would help.  https://chromium-swarm.appspot.com/task?id\u003d6b09ec2ea49f4e10# only says:\n\n```\n[89/95] compile out/msvs.analyze/tests.o\n[90/95] run out/msvs.fast/tests.exe\n[91/95] link out/msvs.analyze/tests.exe\n[92/95] run out/msvs.analyze/tests.exe\nFAILED: out/msvs.analyze/tests.ok \ncmd /c \"\"out/msvs.analyze/tests.exe\" \u003e \"out/msvs.analyze/tests.ok\"\"\n[93/95] run out/msvs.clang-fast/tests.exe\n[94/95] run out/msvs/tests.exe\n[95/95] run out/msvs.clang/tests.exe\nninja: build stopped: cannot make progress due to previous errors.\nHello from win32 in C:\\b\\s\\w\\ir!\nTraceback (most recent call last):\n  File \"skcms/infra/bots/bot.py\", line 93, in \u003cmodule\u003e\n    call(\u0027{ninja}\\\\ninja.exe -C skcms -f msvs.ninja -k 0\u0027.format(ninja\u003dninja))\n  File \"skcms/infra/bots/bot.py\", line 10, in call\n    subprocess.check_call(cmd, shell\u003dTrue)\n  File \"C:\\b\\s\\w\\ir\\python\\bin\\lib\\subprocess.py\", line 186, in check_call\n    raise CalledProcessError(retcode, cmd)\nsubprocess.CalledProcessError: Command \u0027ninja\\ninja.exe -C skcms -f msvs.ninja -k 0\u0027 returned non-zero exit status 1\n```",
      "parentUuid": "351fcf2b_d8a51c7e",
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "951be334_b2694d6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 11059
      },
      "writtenOn": "2024-07-26T23:36:47Z",
      "side": 1,
      "message": "Hopefully Brian can be of assistance. I haven\u0027t ever actually built skcms on Windows. Google results for `action RunAnalysis not compiled in` are spooky.",
      "parentUuid": "d96a2b12_b982b383",
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c034034_d9258286",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-29T17:10:30Z",
      "side": 1,
      "message": "I got a local repro after installing \"Build Tools for Visual Studio 2022\" from https://visualstudio.microsoft.com/downloads/ (hiding under \"Tools for Visual Studio\" dropdown).  (Side note: I could not figure out where to find/get `bin/sk.exe` mentioned in https://skia.org/docs/user/build/#windows as a way for getting the Visual Studio tools.)\n\nIt turned out that the problem was `(uint8_t)(i * 7)` in a new test.  The tests pass (at least locally) with an explicit truncation: `(uint8_t)((i * 7) % 256)`.\n\nPS. At `origin/main` I also saw the following warning: `C:\\src\\skcms\\iccdump.c(548) : warning C6200: Index \u0027138\u0027 is out of valid index range \u00270\u0027 to \u0027137\u0027 for non-stack buffer \u0027kSpectralHull\u0027.`.  I\u0027ve ignored it (temporarily disabling the warning via cmdline parameters passed via `ninja/msvs`).",
      "parentUuid": "951be334_b2694d6e",
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4085977_673d5598",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 11059
      },
      "writtenOn": "2024-07-29T17:14:17Z",
      "side": 1,
      "message": "Oh no! I had strongly considered commenting on that overflowing multiply, but I couldn\u0027t find docs to prove that it was problematic. The cast doesn\u0027t retroactively make the signed overflow legal.",
      "parentUuid": "1c034034_d9258286",
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d38a5b44_7444c51a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-29T17:31:56Z",
      "side": 1,
      "message": "Yeah, I suspected something about signed integer overflow being UB, but:\n\n1. `7 * 255` won\u0027t overflow an `int` (OTOH maybe casting `int 256` to `uint8_t` _is_ UB?  I dunno...)\n2. But more importantly, changing the loop variable to `unsigned int` did not help - I.e. the following code would still trigger the problem:\n\n    ```\n        uint8_t src[2 * 256] \u003d {0};\n        for (unsigned int i \u003d 0; i \u003c 256; i++) {\n            // Using a different \"gray\" and \"alpha\" value will hopefully catch most\n            // potential LE-vs-BE confusion bugs.\n            src[i * 2 + 0] \u003d (uint8_t)i;\n            src[i * 2 + 1] \u003d (uint8_t)(i * 7);\n        }\n    ```\n\nSo my guess is that implicit casts that truncate are a problem.\n\nIt\u0027s a bit sad that `ninja -f ninja\\msvs.analyze` (as well as `out\\msvs.analyze\\tests.exe`) doesn\u0027t print any more details about the problem...",
      "parentUuid": "e4085977_673d5598",
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd5e15e7_b81b6f14",
        "filename": "ninja/clang",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-26T23:11:09Z",
      "side": 1,
      "message": "Is the new addition worth keeping?",
      "range": {
        "startLine": 3,
        "startChar": 83,
        "endLine": 3,
        "endChar": 84
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2253c799_88e4514a",
        "filename": "ninja/clang",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 11059
      },
      "writtenOn": "2024-07-26T23:36:47Z",
      "side": 1,
      "message": "Yes. `unsafe-buffer-usage` is ~impossible to satisfy in our code base.",
      "parentUuid": "cd5e15e7_b81b6f14",
      "range": {
        "startLine": 3,
        "startChar": 83,
        "endLine": 3,
        "endChar": 84
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e576f3a4_1386bbc3",
        "filename": "ninja/clang",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-29T17:10:30Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2253c799_88e4514a",
      "range": {
        "startLine": 3,
        "startChar": 83,
        "endLine": 3,
        "endChar": 84
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4875b70_dac506d2",
        "filename": "src/Transform_inl.h",
        "patchSetId": 4
      },
      "lineNbr": 842,
      "author": {
        "id": 11059
      },
      "writtenOn": "2024-07-26T22:27:59Z",
      "side": 1,
      "message": "nit: it feels strange to add in `\u003e\u003e 0` if you are not going to actually line up the line with the previous one with indentation:\n\n```\n    r \u003d g \u003d b \u003d cast\u003cF\u003e((u16 \u003e\u003e 0) \u0026 0xff) * (1 / 255.0f);\n            a \u003d cast\u003cF\u003e((u16 \u003e\u003e 8) \u0026 0xff) * (1 / 255.0f);\n```\n\nI think it would be much more consistent with the rest of the file to add the indentation.",
      "range": {
        "startLine": 842,
        "startChar": 24,
        "endLine": 842,
        "endChar": 34
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47259072_d3bec2a7",
        "filename": "src/Transform_inl.h",
        "patchSetId": 4
      },
      "lineNbr": 842,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-26T23:11:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4875b70_dac506d2",
      "range": {
        "startLine": 842,
        "startChar": 24,
        "endLine": 842,
        "endChar": 34
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4e401d3_5120a14b",
        "filename": "src/skcms_public.h",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 11059
      },
      "writtenOn": "2024-07-26T22:27:59Z",
      "side": 1,
      "message": "nit: Seems unnecessary to call out PNG here; \"grayscale with alpha\" is sufficient to explain it.\n\nAlso, \"grayscale\" not \"greyscale\" (American English spellings please)",
      "range": {
        "startLine": 278,
        "startChar": 33,
        "endLine": 278,
        "endChar": 80
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89a2545b_9ab29d6d",
        "filename": "src/skcms_public.h",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-26T23:11:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4e401d3_5120a14b",
      "range": {
        "startLine": 278,
        "startChar": 33,
        "endLine": 278,
        "endChar": 80
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb213dfd_eceea747",
        "filename": "tests.c",
        "patchSetId": 4
      },
      "lineNbr": 451,
      "author": {
        "id": 11059
      },
      "writtenOn": "2024-07-26T22:27:59Z",
      "side": 1,
      "message": "`uint8_t dst[4 * 256] \u003d {0};`\n\n(Repeat for other memsets below as well)",
      "range": {
        "startLine": 449,
        "startChar": 0,
        "endLine": 451,
        "endChar": 0
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e80b23c1_675b8927",
        "filename": "tests.c",
        "patchSetId": 4
      },
      "lineNbr": 451,
      "author": {
        "id": 8704
      },
      "writtenOn": "2024-07-26T23:11:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb213dfd_eceea747",
      "range": {
        "startLine": 449,
        "startChar": 0,
        "endLine": 451,
        "endChar": 0
      },
      "revId": "f3965306ed80c30780e0e2189004a469863fd3dc",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    }
  ]
}